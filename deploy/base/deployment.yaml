kind: Deployment
apiVersion: apps/v1
metadata:
  name: ringo-web
  labels:
    app: ringo-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ringo-web
  template:
    metadata:
      labels:
        app: ringo-web
    spec:
      volumes:
        - name: app-config
          configMap:
            name: cm-ringo-web-config
        - name: runtime-config
          configMap:
            name: cm-ringo-website-runtime-config
      containers:
        - name: node-server
          image: ARTEFACT_IMAGE
          resources: {}
          volumeMounts:
            - name: app-config
              readOnly: true
              subPath: env
              mountPath: /usr/share/nginx/html/.env
            - name: runtime-config
              subPath: nginx.conf
              mountPath: /etc/nginx/nginx.conf
          livenessProbe:
            httpGet:
              path: /
              port: 80
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: IfNotPresent
      imagePullSecrets:
        - name: aws-ecr
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      serviceAccountName: default
      serviceAccount: default
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600

---
kind: Service
apiVersion: v1
metadata:
  name: ringo-web
  labels:
    app: ringo-web
spec:
  ports:
    - name: http-80
      protocol: TCP
      port: 80
      targetPort: 80
  selector:
    app: ringo-web
  type: ClusterIP
  sessionAffinity: None
  ipFamilies:
    - IPv4
  ipFamilyPolicy: SingleStack
  internalTrafficPolicy: Cluster

